package Algoritmus;
/*
 Имея два отсортированных массива размера m и n соответственно, вам нужно найти элемент,
 который будет находиться на k-й позиции в конечном отсортированном массиве.
Массив 1 - 100 112 256 349 770
Массив 2 - 72 86 113 119 265 445 892
к = 7
Вывод : 256
Окончательный отсортированный массив -
72, 86, 100, 112, 113, 119, 256, 265, 349, 445, 770, 892
7-й элемент этого массива равен 256.
 */

public class KthElementInSortedArrays {
    public static int findKthElement(int[] arr1, int[] arr2, int k) {
        int m = arr1.length;
        int n = arr2.length;
        int i = 0, j = 0;//Инициализируем два указателя i и j для обоих массивов на начало (нулевой индекс).

        while (i < m && j < n) {//В каждой итерации сравниваем элементы arr1[i] и arr2[j].
            // Если arr1[i] меньше, увеличивайте i, иначе увеличивайте j.
            if (arr1[i] < arr2[j]) {
                if (i + j == k) {
                    return arr1[i];
                }
                i++;
            } else {
                if (i + j == k) {
                    return arr2[j];
                }
                j++;
            }
        }
        //В зависимости от значения k, уменьшаем его на 1 и продолжайте итерацию.
        //Как только k достигнет 0, возвращайте Math.min(arr1[i], arr2[j]) как k-й элемент.
        while (i < m) {
            if (i + j == k) {
                return arr1[i];
            }
            i++;
        }

        while (j < n) {
            if (i + j == k) {
                return arr2[j];
            }
            j++;
        }

        return -1; // Если k выходит за границы массивов
    }

    public static void main(String[] args) {
        int[] arr1 = {100, 112, 256, 349, 770};
        int[] arr2 = {72, 86, 113, 119, 265, 445, 892};
        int k = 7;

        int kthElement = findKthElement(arr1, arr2, k - 1); // k-1, так как индексация начинается с 0
        System.out.println("К-й элемент: " + kthElement);//Этот код позволит интерактивно найти k-й элемент в
        // объединенном отсортированном массиве arr1 и arr2.
    }

}
